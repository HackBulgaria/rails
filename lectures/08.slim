---
layout: lecture
title: Persistence
---

section.center data-background="#000"
  h1.white Persistence

section.center
  h1 Object Relational Mapping

section.center
  p Key idea: The languages for manipulating databases from different vendors vary so we have to abstract them

section.center
  p Key idea: Very good mapping between OO and relational databases

section.center
  p Key idea: Model database relations using object-oriented concepts

section.center
  p Tables become classes

section.center
  p Columns become fields

section.center
  p Rows become instances

section.center
  p We don't write SQL anymore

section.center
  p We create instances, assign fields and invoke methods

section.center
  p Just like the rest of our OO code

section.center
  p Code written this way has no database-specific dependencies

section.center
  p It could as well be working with something different than a traditional database store

section.center
  p The ORM generates and invokes the right commands for each operation we perform so that the underlying adapter could understand it

section.center
  h1 ActiveRecord

section.center
  h1 Models

section.center
  h1 Singular names

section.center
  pre: code.ruby
    '
      class Product < ActiveRecord::Base
      end

section.center
  h1 Migrations

section.center
  h1 Validations

section.center
  img.inline src="/images/hackman.png"
